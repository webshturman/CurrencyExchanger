[{"E:\\NativeJS\\Evgen\\src\\redux\\state.ts":"1","E:\\NativeJS\\Evgen\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"2","E:\\NativeJS\\Evgen\\src\\App.tsx":"3","E:\\NativeJS\\Evgen\\src\\redux\\actions.ts":"4","E:\\NativeJS\\Evgen\\src\\redux\\currencyReducer.ts":"5","E:\\NativeJS\\Evgen\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"6","E:\\NativeJS\\Evgen\\src\\lessons\\lesson2\\lesson2.ts":"7","E:\\NativeJS\\Evgen\\src\\lessons\\lesson3\\Lesson3.tsx":"8","E:\\NativeJS\\Evgen\\src\\lessons\\lesson3\\lesson_3.ts":"9","E:\\NativeJS\\Evgen\\src\\lessons\\lesson3\\API.ts":"10","E:\\NativeJS\\Evgen\\src\\index.tsx":"11","E:\\NativeJS\\Evgen\\src\\lessons\\lesson4\\lesson_4.ts":"12"},{"size":286,"mtime":1609751766196,"results":"13","hashOfConfig":"14"},{"size":4397,"mtime":1632909820533,"results":"15","hashOfConfig":"14"},{"size":650,"mtime":1634325952742,"results":"16","hashOfConfig":"14"},{"size":1362,"mtime":1632903877467,"results":"17","hashOfConfig":"14"},{"size":1712,"mtime":1632908550931,"results":"18","hashOfConfig":"14"},{"size":3871,"mtime":1609757735301,"results":"19","hashOfConfig":"14"},{"size":5610,"mtime":1633306526689,"results":"20","hashOfConfig":"14"},{"size":4403,"mtime":1634306419568,"results":"21","hashOfConfig":"14"},{"size":2128,"mtime":1634325879353,"results":"22","hashOfConfig":"14"},{"size":575,"mtime":1634303418916,"results":"23","hashOfConfig":"14"},{"size":319,"mtime":1609752860853,"results":"24","hashOfConfig":"14"},{"size":6388,"mtime":1634372417821,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9298kl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\NativeJS\\Evgen\\src\\redux\\state.ts",[],["53","54"],"E:\\NativeJS\\Evgen\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["55","56"],"E:\\NativeJS\\Evgen\\src\\App.tsx",["57"],"E:\\NativeJS\\Evgen\\src\\redux\\actions.ts",[],"E:\\NativeJS\\Evgen\\src\\redux\\currencyReducer.ts",[],"E:\\NativeJS\\Evgen\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"E:\\NativeJS\\Evgen\\src\\lessons\\lesson2\\lesson2.ts",["58","59"],"// console.log('lesson 2');\r\n\r\n// Lexical environment\r\n// http://jsflow.org/docs/lex-env/\r\n\r\n//// Closure\r\n// https://learn.javascript.ru/closure\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Closures\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%B7%D0%B0%D0%BC%D1%8B%D0%BA%D0%B0%D0%BD%D0%B8%D1%8F-%D0%B2-javascript-%D1%80%D0%B0%D0%B7-%D0%B8-%D0%BD%D0%B0%D0%B2%D1%81%D0%B5%D0%B3%D0%B4%D0%B0-c211805b6898\r\n// https://www.youtube.com/watch?v=pahO5XjnfLA\r\n\r\n//// Сurrying\r\n// https://learn.javascript.ru/currying-partials\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%BA%D0%B0%D1%80%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B2-javascript-5ec4a1d88827\r\n\r\n// Pattern Module\r\n// https://habr.com/ru/company/ruvds/blog/419997/\r\n\r\n// Recursion\r\n// https://learn.javascript.ru/recursion\r\n// https://www.youtube.com/watch?v=Kuq6oIN3PH0\r\n\r\n\r\n// Task 01\r\n// Реализовать функцию sum которая суммирует 2 числа следующим образом sum(3)(6) === 9\r\nfunction sum (arg:number) {\r\n    return function (arg1:number) {\r\n       return  arg+arg1\r\n    }\r\n}\r\nconsole.log(sum(3)(6))\r\n// Task 02\r\n// Реализовать функцию makeCounter которая работает следующим образом:\r\n// const counter = makeCounter();\r\n// counter(); // 1\r\n// counter(); // 2\r\n// const counter2 = makeCounter();\r\n// counter2(); // 1\r\n// counter(); // 3\r\n//@ts-ignore\r\nfunction makeCounter () {\r\n    let count = 0\r\n    return function() {\r\n        return ++count\r\n    }\r\n}\r\nconst counter = makeCounter();\r\n//@ts-ignore\r\nconsole.log(counter()); // 1\r\n//@ts-ignore\r\nconsole.log(counter()); // 2\r\nconst counter2 = makeCounter()\r\nconsole.log(counter2()); // 1\r\nconsole.log(counter())\r\n\r\n// Task 03\r\n// Переписать функцию из Task 02 так, что бы она принимала число в качестве аргумента и это число было стартовым значением счетчика\r\n// и возвращала следующий объект методов:\r\n// increase: +1\r\n// decrease: -1\r\n// reset: установить счетчик в 0;\r\n// set: установить счетчик в заданное значение;\r\n\r\nfunction makeCounter2 (value:number) {\r\n    let currentValue = value\r\n    return {\r\n        increase: function() {\r\n            return ++currentValue\r\n        },\r\n        decrease: function() {\r\n            return --currentValue\r\n        },\r\n        reset: function() {\r\n            return currentValue = 0\r\n        },\r\n        set: function() {\r\n            return value = currentValue\r\n        },\r\n    }\r\n}\r\nlet newCounter = makeCounter2(5)\r\nconsole.log(newCounter.increase())\r\nconsole.log(newCounter.decrease())\r\nconsole.log(newCounter.reset())\r\nconsole.log(newCounter.set())\r\nconsole.log(newCounter.increase())\r\n\r\n// Task 04*\r\n// Реализовать функцию superSum которая принимает число в качестве аргумента, которое указывает на количество слагаемых\r\n// и что бы корректно работали следующие вызовы:\r\n// 1) superSum(0) //0\r\n// 2) superSum(3)(2)(5)(3) //10\r\n// 3) superSum(3)(2)(5,3) //10\r\n// 4) superSum(3)(2,5,3) //10\r\n// 5) superSum(3)(2,5)(3) //10\r\n// 6) superSum(3)(2,5)(3,9) //10\r\n\r\n// P.S. типизируйте только аргументы, а при вызове функции используйте @ts-ignore\r\nfunction superSum (num:number) {\r\n    if (num <=0 || num === null || num === undefined) return 0;\r\n    if (num===1) return (n:number) => n;\r\n    let argArray:Array<number> = [];\r\n\r\n    function helper(...args:Array<number>) {\r\n        argArray = [...argArray, ...args]\r\n        if(argArray.length >= num){\r\n            argArray.length = num;\r\n            return argArray.reduce((acc:number,el:number) => acc + el)\r\n        } else {\r\n            return helper;\r\n        }\r\n    }\r\n    return helper;\r\n}\r\n// @ts-ignore\r\nconsole.log(superSum(3)(2)(5)(3))\r\n// @ts-ignore\r\nconsole.log(superSum(3)(2)(5,3)) //10\r\n// @ts-ignore\r\nconsole.log(superSum(3)(2,5,3)) //10\r\n// @ts-ignore\r\nconsole.log(superSum(3)(2,5)(3)) //10\r\n// @ts-ignore\r\nconsole.log(superSum(3)(2,5)(3,9)) //10\r\n//----------------------------------------------------------------------------------------------------\r\n// Task 05\r\n// решить все задачи по рекурсии которые даны в конце статьи https://learn.javascript.ru/recursion\r\nconst sumTo = (num:number) => {\r\n    let sum = 0;\r\n    for (let i=num; i >= 1; i--){\r\n        sum += i\r\n    }\r\n    return sum\r\n}\r\nconsole.log(sumTo(100))\r\n//@ts-ignore\r\nconst sumTo2 = (num:number) => {\r\n   let sum = 0;\r\n   if(num >=1){\r\n       return sum\r\n   } else {\r\n       return sum = num + sumTo2(num-1)\r\n   }\r\n}\r\n\r\nconsole.log(sumTo(100))\r\n//-------------------------------------------------------------------------------------------------\r\n//@ts-ignore\r\nfunction factorial(n:number) {\r\n    if(n ===1) return 1\r\n    return n * factorial(n-1)\r\n}\r\nconsole.log(factorial(5))\r\n//----------------------------------------------------------------------------------------\r\n//@ts-ignore\r\nfunction fib(n:number) {\r\n    return n <= 1 ? n : fib(n - 1) + fib(n - 2);\r\n}\r\nalert(fib(7))\r\n\r\n// Task 06\r\n// написать функцию, которая повторяет функционал метода flat массива на всю глубину.\r\n\r\n// just a plug\r\nexport default () => {};","E:\\NativeJS\\Evgen\\src\\lessons\\lesson3\\Lesson3.tsx",[],"E:\\NativeJS\\Evgen\\src\\lessons\\lesson3\\lesson_3.ts",["60"],"E:\\NativeJS\\Evgen\\src\\lessons\\lesson3\\API.ts",[],"E:\\NativeJS\\Evgen\\src\\index.tsx",[],["61","62"],"E:\\NativeJS\\Evgen\\src\\lessons\\lesson4\\lesson_4.ts",["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":23},{"ruleId":"69","severity":1,"message":"73","line":11,"column":9,"nodeType":"71","messageId":"72","endLine":11,"endColumn":21},{"ruleId":"69","severity":1,"message":"74","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":15},{"ruleId":"69","severity":1,"message":"75","line":142,"column":27,"nodeType":"71","messageId":"72","endLine":142,"endColumn":33},{"ruleId":"76","severity":1,"message":"77","line":165,"column":1,"nodeType":"78","endLine":165,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":50,"column":1,"nodeType":"78","endLine":50,"endColumn":23},{"ruleId":"65","replacedBy":"79"},{"ruleId":"67","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":112,"column":26,"nodeType":"83","messageId":"84","endLine":112,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":142,"column":1,"nodeType":"78","endLine":142,"endColumn":23},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'CurrencyState' is defined but never used.","Identifier","unusedVar","'IGlobalState' is defined but never used.","'Lesson3' is defined but never used.","'sumTo2' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["85"],["86"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]